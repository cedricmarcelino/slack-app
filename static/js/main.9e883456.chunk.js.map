{"version":3,"sources":["js/dashboard-components/Header.js","js/dashboard-components/Sidebar.js","js/AddChannel.js","js/AddMember.js","js/Channel.js","js/DirectMessage.js","js/Welcome.js","js/AlertWindow.js","js/dashboard-components/Maincontent.js","js/Dashboard.js","js/Login.js","js/Signup.js","js/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","greetings","mobileView","setShowMenu","showMenu","className","onClick","Sidebar","props","setActivePage","userHeaders","value","setChannelName","setChannelID","setListOfMessages","setRecipientName","setRecipientID","counter","setCounter","counter2","setCounter2","useState","usersChannelVisible","setUsersChannelVisible","usersDirectMessagesVisible","setUsersDirectMessagesVisible","addButtonVisible","setAddButtonVisible","listOfChannels","setListOfChannels","setListOfChannelID","objectChannel","setObjectChannel","noChannels","setNoChannels","noUsersInList","setNoUsersInList","loading","setLoading","loading1","setLoading1","searchUser","setSearchUser","searchEmails","setSearchEmails","allUsersStored","setAllUsersStored","usersInChannels","userEmailsInChannels","retrieveUserChannels","a","fetch","method","headers","mode","then","response","json","userChannels","undefined","data","userChannelsName","map","name","userChannelsID","id","i","tempObjectChannel","forEach","channelName","catch","error","console","log","showChannel","e","targetChannel","target","innerHTML","channelID","channelDetails","channel_members","member","includes","user_id","push","loadAllUsers","returnedArray","allUsers","allUsersData","item","email","uniq","Set","OpenDMWindow","trgtMember","useEffect","onMouseEnter","onMouseLeave","channel","type","placeholder","onChange","event","index","toLowerCase","AddChannel","userId","setValue","setAlertMessage","setAlertWindowVisible","body","JSON","stringify","errors","AddMember","accountID","setAccountID","addUser","Channel","listOfMessages","message","setMessage","endOfMessages","useRef","sendMessage","retrieveMessages","length","messagesData","tempListOfMessages","interval","setInterval","clearInterval","current","scrollIntoView","behavior","scrollToBottom","sender","uid","ref","onKeyPress","key","preventDefault","onKeyHandleSentMessage","DirectMessage","recipientName","recipientID","endOfMessages2","class","Welcome","setCurrentUser","history","useHistory","AlertWindow","alertMessage","alertWindowVisible","Maincontent","activePage","Dashboard","currentUser","userInfo","parse","localStorage","getItem","Object","keys","to","query","matches","Login","emailLogInInput","passwordLogInput","logInReminder","setLogInReminder","logInVisiblity","setLogInVisibility","setSignUpVisibility","signUpVisibity","headersList","user","userData","status","head","Array","from","entries","reduce","pair","src","alt","action","defaultValue","htmlFor","autoComplete","required","Signup","emailSignUpInput","passwordSignUpInput","confirmSignUpInput","signUpReminder","setSignUpReminder","setHomeState","signUpVisibility","registerUser","state","buttonText","captionText","transitionClass","full_messages","onSignupEnter","blur","setTimeout","focus","Home","signupState","loginState","homeState","App","localStorageCurrentUser","currentUserData","setItem","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e883456.chunk.js","sourcesContent":["function Header({greetings,mobileView,setShowMenu,showMenu}) {\r\n\r\n\r\n    function showNav(){\r\n        if(showMenu===false){\r\n            setShowMenu(true)\r\n        }else {\r\n            setShowMenu(false)\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        \r\n        <div className={`bg-purple-800 text-white font-bold flex ${!mobileView ? \"justify-left\" : \"justify-between\" } p-3`}>\r\n            <span className=\"text-3xl mx-3\">aChat</span>\r\n            {mobileView && <span className=\"cursor-pointer text-3xl mx-3\" onClick={showNav}> ☰ </span>}\r\n            {!mobileView && <span className=\"text-xl self-center mr-0 ml-auto\">{greetings}</span>}\r\n            \r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { data } from 'autoprefixer'\r\nimport {useState,useEffect} from 'react'\r\n\r\nfunction Sidebar(props) {\r\n\r\n    const {greetings,setActivePage,userHeaders,value,setChannelName,setChannelID,setListOfMessages, setRecipientName, setRecipientID, counter, setCounter,mobileView,showMenu,setShowMenu, counter2, setCounter2} = props\r\n    const [usersChannelVisible, setUsersChannelVisible] = useState(false)\r\n    const [usersDirectMessagesVisible, setUsersDirectMessagesVisible] = useState(false) //renders list of users\r\n    const [addButtonVisible, setAddButtonVisible] = useState(false)\r\n    const [listOfChannels,setListOfChannels] = useState([])\r\n    const [listOfChannelID,setListOfChannelID] = useState([])\r\n    const [objectChannel,setObjectChannel] = useState({})\r\n    const [noChannels,setNoChannels] = useState()\r\n    const [noUsersInList, setNoUsersInList] = useState(true) //renders 'no users available' on direct messages in sidebar if set to true\r\n    const [loading,setLoading] = useState()\r\n    const [loading1,setLoading1] = useState() //renders 'fetching data' when data is not yet ready\r\n    const [searchUser,setSearchUser] = useState(\"\")//filters searchbar\r\n    const [searchEmails, setSearchEmails] = useState([])//array where searchbar can look for emails\r\n    const [allUsersStored, setAllUsersStored] = useState([]) // array where all users from fetch are stored\r\n    let usersInChannels = [] //array where user IDs of all members in user's channels are pushed\r\n    let userEmailsInChannels = [] //array where user emails are pushed based on user IDs\r\n\r\n    userHeaders[`Content-Type`] =  \"application/json\"\r\n\r\n    async function retrieveUserChannels(){\r\n        setLoading(true)\r\n        await fetch(\"http://206.189.91.54/api/v1/channels\",\r\n            {method: \"GET\",\r\n            headers: userHeaders, \r\n            mode:\"cors\"})\r\n        .then(response=>response.json())\r\n        .then(userChannels=>{\r\n            if(userChannels.data!==undefined){\r\n                let userChannelsName = userChannels.data.map(data => \r\n                    data.name\r\n                )\r\n                setListOfChannels(userChannelsName)\r\n                let userChannelsID = userChannels.data.map(data => \r\n                    data.id\r\n                )\r\n                setListOfChannelID(userChannelsID)\r\n                \r\n                let i=0\r\n                let tempObjectChannel = {}\r\n\r\n                userChannelsName.forEach(channelName => {\r\n                    tempObjectChannel[channelName] = userChannelsID[i]\r\n                    i++\r\n                })\r\n\r\n                setObjectChannel(tempObjectChannel)\r\n\r\n                setNoChannels(false)\r\n                setLoading(false)\r\n            } else {\r\n                setLoading(false)\r\n                setNoChannels(true)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    // updates list when a channel is added\r\n\r\n    useEffect( ()=>{\r\n        retrieveUserChannels()\r\n    },[value])\r\n\r\n    function showUsersChannel(){\r\n        if(usersChannelVisible===false){\r\n            retrieveUserChannels()\r\n            setUsersChannelVisible(true)\r\n        } else {\r\n            setUsersChannelVisible(false)\r\n        }\r\n    }\r\n\r\n    function showAddButton(){\r\n        setAddButtonVisible(true)\r\n    }\r\n\r\n    function hideAddButton(){\r\n        setAddButtonVisible(false)\r\n    }\r\n\r\n    // shows page where add channel is\r\n\r\n    function showAddChannel(){\r\n        setActivePage(\"AddChannel\")\r\n        setShowMenu(false)\r\n    }\r\n\r\n    async function showChannel(e){\r\n        setActivePage(\"Channel\")\r\n        setListOfMessages([])\r\n        const targetChannel = e.target.innerHTML\r\n        setChannelName(targetChannel)\r\n        setChannelID(objectChannel[targetChannel])\r\n        setCounter(counter+1)\r\n        setShowMenu(false)\r\n    }\r\n\r\n    function showWelcomePage(){\r\n        setActivePage(\"Welcome\")\r\n        setShowMenu(false)\r\n    }\r\n\r\n    // direct message functions\r\n\r\n    async function loadUsersFromChannel(){ // stores user IDs of all users in user's channels in an array\r\n        setLoading1(true)\r\n        await fetch(\"http://206.189.91.54/api/v1/channels\", //fetches all channels of user\r\n            {method: \"GET\",\r\n            headers: userHeaders, \r\n            mode:\"cors\"})\r\n        .then(response=>response.json())\r\n        .then(userChannels=>{\r\n            let userChannelsID = userChannels.data.map(data => data.id)\r\n                userChannelsID.map(channelID => \r\n                    fetch(`http://206.189.91.54/api/v1/channels/${channelID}`, //fetches the channel details via channel ID then collects all the user IDs\r\n                    {method: \"GET\",\r\n                    headers: userHeaders,\r\n                    mode: \"cors\"})\r\n                    .then(response=>response.json())\r\n                    .then(channelDetails => \r\n                        channelDetails.data.channel_members.map(member => {  //filters duplicate IDs then stores one of each unique ID in array\r\n                            if (usersInChannels.includes(member.user_id)) \r\n                            { return null } \r\n                            else {\r\n                                usersInChannels.push(member.user_id)\r\n                                let returnedArray = usersInChannels\r\n                                loadAllUsers(returnedArray)\r\n                            }\r\n                        }))\r\n                    )\r\n                })\r\n        .then(() => {\r\n            if (searchEmails !== (undefined||null)) {\r\n                setLoading1(false)\r\n                setNoUsersInList(false)}\r\n            else {\r\n                setLoading1(false)\r\n                setNoUsersInList(true)\r\n                }\r\n            })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    async function loadAllUsers (returnedArray){ // fetches all users ID (to be used for cross reference)\r\n        await (fetch(\"http://206.189.91.54/api/v1/users\", \r\n        {method: \"GET\",\r\n        headers: userHeaders,\r\n        mode: \"cors\"}))\r\n        .then(response=>response.json())\r\n        .then(allUsers=>{\r\n            const allUsersData = allUsers.data.map(item=>item)\r\n            setAllUsersStored(allUsersData)\r\n\r\n            allUsers.data.map(item=> returnedArray.includes(item.id) ? \r\n            userEmailsInChannels.push(item.email) : null)\r\n        })\r\n        .then(()=>{\r\n            var uniq = [...new Set(userEmailsInChannels)] //replaces the duplicate values inside userEmailsInChannels\r\n            setSearchEmails(uniq)\r\n            })\r\n    }\r\n\r\n    // loads loadUsersFromChannel() only once upon rendering of Sidebar\r\n    useEffect(loadUsersFromChannel,[])\r\n\r\n    // shows list of user's DMs with other users\r\n\r\n    function showUsersDirectMessages(){\r\n        if(usersDirectMessagesVisible===false){\r\n            setUsersDirectMessagesVisible(true)\r\n        } else {\r\n            setUsersDirectMessagesVisible(false)\r\n        }\r\n    }\r\n\r\n        \r\n\r\n    async function OpenDMWindow(e) {\r\n        const trgtMember = e.target.innerHTML\r\n        setRecipientName(trgtMember)\r\n        setActivePage(\"DirectMessage\")\r\n        setListOfMessages([])\r\n        setCounter2(counter2+1)\r\n        allUsersStored.map(item=> item.email === trgtMember ? setRecipientID(item.id) : null)\r\n        setShowMenu(false)\r\n     }\r\n\r\n\r\n    return (\r\n        <div className={`bg-purple-900 text-white ${mobileView ? \"w-full absolute\" : \"w-2/12\"} ${mobileView && `${showMenu ? \"block\" : \"hidden\"}`} ${mobileView===false && \"block\"} max-h-90%\" `}>\r\n            \r\n            {mobileView && <span className=\"flex item-stretch justify-center font-semibold p-1 mt-4 mb-2\">{greetings}</span>}\r\n\r\n            <span className={`cursor-pointer flex item-stretch mx-4 font-semibold  ${mobileView ? \"justify-center text-2xl p-1\": \"justify-left text-lg p-4 mt-4\"}`} onClick={showWelcomePage}>Home</span>\r\n            \r\n            {(addButtonVisible===false&&!mobileView) &&\r\n            <>\r\n                <span className={`cursor-pointer flex item-stretch mx-4 font-semibold ${mobileView ? \"justify-center text-2xl p-1\": \"justify-left text-lg p-4\"}`} onMouseEnter={showAddButton}>Channels{usersChannelVisible===false ? <span>▴</span> : <span>▾</span>}</span>\r\n            </>\r\n            }\r\n\r\n            {(addButtonVisible || mobileView) &&\r\n            <>\r\n                <div className={`cursor-pointer flex ${mobileView ? \"justify-center text-2xl p-1\": \"justify-between text-lg p-4\"} mx-4 font-semibold`} onMouseLeave={hideAddButton}> \r\n                    <span onClick={showUsersChannel}>Channels{usersChannelVisible===false ? <span>▴</span> : <span>▾</span>}</span>\r\n                    <span onClick={showAddChannel}>+</span>\r\n                </div>\r\n            </>\r\n            }\r\n\r\n            {(loading && usersChannelVisible) &&\r\n            <>\r\n            <ul className=\"mx-10\">\r\n                    <li>Fetching Data</li>\r\n            </ul>\r\n            </>\r\n            }\r\n            \r\n            {(usersChannelVisible && noChannels===false && loading===false)&& \r\n                <ul className={`mx-10 ${mobileView && \"text-center text-xl\"} max-h-40 overflow-scroll no-scrollbar`}>\r\n                    {listOfChannels.map((channel,id) => <li key={id} className=\"cursor-pointer\" onClick={showChannel}>{channel}</li>)}\r\n                </ul>\r\n            }\r\n\r\n            {(usersChannelVisible && noChannels===true && loading===false)&& \r\n                <ul className=\"mx-10\">\r\n                    <li>No Available Channels</li>\r\n                </ul>\r\n            }\r\n\r\n            {/* direct messages */}\r\n\r\n            {\r\n                <>\r\n                    <div className={`cursor-pointer flex ${mobileView ? \"justify-center text-2xl p-1 mb-4\": \"justify-left text-lg p-4\"} mx-4 font-semibold`} > \r\n                        <span onClick={showUsersDirectMessages}>Direct Messages{usersDirectMessagesVisible===false ? <span>▴</span> : <span>▾</span>}</span>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {(loading1 && usersDirectMessagesVisible) &&\r\n                <>\r\n                    <ul className=\"mx-10\">\r\n                            <li>Fetching Data</li>\r\n                    </ul>\r\n                </>\r\n            }\r\n            \r\n            {(usersDirectMessagesVisible && noUsersInList===false && loading1===false)&& \r\n                <div className=\"flex justify-start flex-col items-center\">\r\n                    <input type=\"text\" placeholder=\"Search...\" onChange={event=>{setSearchUser(event.target.value)}} className={`w-1/2 text-black w-3/4 max-w-sm`}/>\r\n                    <ul className={`mx-10 ${mobileView && \"text-center mb-4\"} max-h-60 overflow-scroll no-scrollbar flex flex-col items-start`}>\r\n                        {searchEmails.map((item, index)=> {\r\n                            if (searchUser === '') {\r\n                                return <li onClick = {OpenDMWindow} key = {index}>{item}</li>\r\n                            }\r\n                            else if (item.toLowerCase().includes(searchUser.toLowerCase())) {\r\n                                return <li onClick = {OpenDMWindow} key = {index}>{item}</li>\r\n                            }\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            }\r\n\r\n            {(usersDirectMessagesVisible && noUsersInList===true && loading1===false)&& \r\n                <ul className=\"mx-10\">\r\n                    <li>No Available Users</li>\r\n                </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import {useState} from 'react'\r\n\r\nfunction AddChannel(props) {\r\n\r\n    const {userHeaders,userId,setValue,value,setAlertMessage,setAlertWindowVisible} = props\r\n    const [channelName,setChannelName] = useState(\"\")\r\n\r\n    userHeaders[`Content-Type`] =  \"application/json\"\r\n    \r\n    function handleChange(e) {\r\n        setChannelName(e.target.value)\r\n    }\r\n\r\n    async function handleClick() {\r\n\r\n        const body = {\r\n            \"name\": channelName,\r\n            \"user_ids\": [userId]\r\n        }\r\n\r\n        await fetch(\"http://206.189.91.54/api/v1/channels\",\r\n            {method: \"POST\",\r\n            headers: userHeaders, \r\n            mode: \"cors\",\r\n            body: JSON.stringify(body)})\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                if(data.errors!==undefined){\r\n                    setAlertMessage(data.errors[0])\r\n                    setAlertWindowVisible(true)\r\n                } else {\r\n                    setChannelName(\"\")\r\n                    setAlertMessage(\"Channel created!\")\r\n                    setAlertWindowVisible(true)\r\n                    setValue(value+1)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center py-24\">\r\n            <h1 className=\"font-semibold text-3xl my-2\">Create a new channel</h1>\r\n            <fieldset>\r\n                <label className=\"my-2\">Channel name: </label>\r\n                <input className=\"my-2\" type=\"text\" onChange={handleChange} value={channelName}></input>\r\n            </fieldset>\r\n            <button onClick={handleClick} className=\"bg-purple-800 hover:bg-purple-900 text-white font-bold py-2 px-4 border border-purple-900 rounded my-2\">\r\n                Create Channel\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddChannel","import {useState} from 'react'\r\n\r\nfunction AddMember(props) {\r\n    const {channelID,userHeaders,setAlertMessage,setAlertWindowVisible} = props\r\n    const [accountID,setAccountID] = useState(\"\")\r\n\r\n    async function addUser(body){\r\n        await fetch(\"http://206.189.91.54/api/v1/channel/add_member\",\r\n            {method: \"POST\",\r\n            headers: userHeaders, \r\n            mode:\"cors\",\r\n            body: JSON.stringify(body)})\r\n        .then(response=>response.json())\r\n\r\n        .then(data=>{\r\n            if(typeof data.errors===\"string\"){\r\n                setAlertMessage(data.errors)\r\n                setAlertWindowVisible(true)\r\n            } else if (typeof data.errors===\"object\") {\r\n                setAlertMessage(data.errors[0])\r\n                setAlertWindowVisible(true)\r\n            } else if (data.errors===undefined) {\r\n                setAccountID(\"\")\r\n                setAlertMessage(\"User added successfuly!\")\r\n                setAlertWindowVisible(true)\r\n            }\r\n        })\r\n\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleChange(e){\r\n        setAccountID(e.target.value)\r\n    }\r\n\r\n    function handleClick(){\r\n        const body={\r\n            \"id\": channelID,\r\n            \"member_id\": accountID\r\n        }\r\n        addUser(body)\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center py-5\">\r\n            <h1 className=\"font-semibold text-3xl my-2\">Add new member: </h1>\r\n            <fieldset>\r\n                <label className=\"my-2\">Account ID: </label>\r\n                <input className=\"my-2\" type=\"text\" onChange={handleChange} value={accountID}></input>\r\n            </fieldset>\r\n            <button onClick={handleClick} className=\"bg-purple-800 hover:bg-purple-900 text-white font-bold py-2 px-4 border border-purple-900 rounded my-2\">\r\n                Add Member\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMember\r\n","import {useEffect,useRef,useState} from 'react'\r\n\r\nfunction Channel(props) {\r\n\r\n    const {channelName,channelID,listOfMessages,userHeaders,setListOfMessages,setActivePage, counter, setCounter, mobileView} = props\r\n    const [message,setMessage] = useState(\"\")\r\n    const [value,setValue] = useState(0)\r\n    const [loading,setLoading] = useState()\r\n    const endOfMessages = useRef(null)\r\n    \r\n\r\n    function handleClick(){\r\n        setActivePage(\"AddMember\")\r\n    }\r\n    \r\n    function handleChange(e){\r\n        setMessage(e.target.value)\r\n    }\r\n    \r\n    async function sendMessage(body){\r\n        await fetch(\"http://206.189.91.54/api/v1/messages\",\r\n            {method: \"POST\",\r\n            headers: userHeaders, \r\n            mode:\"cors\",\r\n            body: JSON.stringify(body)})\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setValue(value=>value+1)})\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleSentMessage(){\r\n        const body={\r\n            \"receiver_id\": channelID,\r\n            \"receiver_class\": \"Channel\",\r\n            \"body\": message\r\n        }\r\n        sendMessage(body)\r\n        setMessage(\"\")\r\n    }\r\n\r\n    function onKeyHandleSentMessage(e){\r\n        if (e.key === \"Enter\"){\r\n            e.preventDefault()\r\n            const body={\r\n                \"receiver_id\": channelID,\r\n                \"receiver_class\": \"Channel\",\r\n                \"body\": message\r\n            }\r\n            sendMessage(body)\r\n            setMessage(\"\")\r\n        }\r\n    }\r\n\r\n    async function retrieveMessages(){\r\n        await fetch(`http://206.189.91.54/api/v1/messages?receiver_id=${channelID}&receiver_class=Channel`,\r\n        {method: \"GET\",\r\n        headers: userHeaders, \r\n        mode:\"cors\"})\r\n        .then(response=>response.json())\r\n        .then(data=> {\r\n            if(data.data.length!==0){\r\n                const messagesData = data.data\r\n                let tempListOfMessages = []\r\n                messagesData.forEach(message => {\r\n                    tempListOfMessages.push(message)\r\n                })\r\n                setListOfMessages(tempListOfMessages)\r\n\r\n            } else {\r\n                console.log(\"NO MESSAGES\")\r\n            }\r\n            setLoading(false)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    useEffect( ()=>{\r\n        // removed these two lines so it doesnt look buggy when sending a message\r\n        // setListOfMessages([])\r\n        // setLoading(true)\r\n        retrieveMessages()\r\n    },[channelName,value])\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCounter(counter + 1)\r\n            retrieveMessages()\r\n        }, 5000);\r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n      }, [counter]);\r\n\r\n    \r\n    const scrollToBottom = () => {\r\n        endOfMessages.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        scrollToBottom()\r\n    },[listOfMessages])\r\n\r\n\r\n    return (\r\n        <div className=\"h-full flex flex-col justify-between max-h-90%\">\r\n            <div className=\"border-solid border-purple-300 border-2 bg-white p-3 flex justify-between\">\r\n                <span className={`font-bold ${mobileView ? \"text-xl\": \"text-3xl\"}`}>{channelName} #{channelID}</span>\r\n                <span className={`font-bold text-center ${mobileView ? \"text-base\": \"text-xl\"} cursor-pointer`} onClick={handleClick}>+ Add Member</span>\r\n            </div>\r\n\r\n            <div className=\"p-4 h-screen max-h-90 overflow-y-scroll\">\r\n                {loading ? \r\n                <div className=\"text-center my-10\"> Fetching Messages </div>\r\n                : \r\n                listOfMessages.map((message) => \r\n                <div className={message.sender.uid===userHeaders.uid ? `ml-auto mr-0 ${mobileView ? \"w-4/6\" : \"w-2/6\" }` : `ml-0 mr-auto ${mobileView ? \"w-4/6\" : \"w-2/6\" }`}>\r\n                    <div className={message.sender.uid===userHeaders.uid ? \"m-3 font-semibold text-right\" : \"m-3 font-semibold\"}>{message.sender.uid===userHeaders.uid ? \"You\" :message.sender.uid}</div>\r\n                    <div className={message.sender.uid===userHeaders.uid ? \"border-solid rounded-md border-purple-300 border-2 text-lg p-4 m-3 bg-purple-500 text-white\" : \"bg-purple-900 border-solid rounded-md border-purple-300 border-2 text-lg p-4 m-3 text-white\"}>\r\n                            <span>{message.body}</span>\r\n                    </div>\r\n                </div>\r\n                )\r\n                }\r\n                <div className=\"h-px w-px\" ref={endOfMessages}> </div>\r\n            </div>\r\n                \r\n\r\n            <div className=\"p-4\">\r\n                <textarea className=\"border-solid border-purple-300 border-2 resize-none w-full h-40 p-4\" name=\"message\" onChange={handleChange} onKeyPress={e=>onKeyHandleSentMessage(e)} value={message}></textarea>\r\n                <button className=\"bg-purple-700 hover:bg-purple-900 text-white font-bold py-2 px-4 rounded\" onClick={handleSentMessage}>\r\n                    Send Message\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Channel\r\n","import {useEffect,useState, useRef} from 'react'\r\nfunction DirectMessage(props) { \r\n\r\n    const {recipientName,recipientID,listOfMessages,userHeaders,setListOfMessages, counter2, setCounter2} = props\r\n    const [message,setMessage] = useState(\"\")\r\n    const [value,setValue] = useState(0)\r\n    const [loading,setLoading] = useState()\r\n    const endOfMessages2 = useRef(null)\r\n    \r\n    function handleChange(e){\r\n        setMessage(e.target.value)\r\n    }\r\n    \r\n    async function sendMessage(body){\r\n        await fetch(\"http://206.189.91.54/api/v1/messages\",\r\n            {method: \"POST\",\r\n            headers: userHeaders, \r\n            mode:\"cors\",\r\n            body: JSON.stringify(body)})\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            setValue(value=>value+1)\r\n            console.log(data)})\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleSentMessage(){\r\n        const body={\r\n            \"receiver_id\": recipientID, // UserID\r\n            \"receiver_class\": \"User\",\r\n            \"body\": message\r\n        }\r\n        sendMessage(body)\r\n        setMessage(\"\")\r\n    }\r\n\r\n    function handleSentMessageEnterKey(e){\r\n        if (e.key === 'Enter') {\r\n        e.preventDefault()\r\n        const body={\r\n            \"receiver_id\": recipientID, // UserID\r\n            \"receiver_class\": \"User\",\r\n            \"body\": message\r\n        }\r\n        sendMessage(body)\r\n        setMessage(\"\")\r\n        }\r\n    }\r\n\r\n    async function retrieveMessages(){\r\n        await fetch(`http://206.189.91.54/api/v1/messages?receiver_id=${recipientID}&receiver_class=User`,\r\n        {method: \"GET\",\r\n        headers: userHeaders, \r\n        mode:\"cors\"})\r\n        .then(response=>response.json())\r\n        .then(data=> {\r\n            if(data.data.length!==0){\r\n                const messagesData = data.data\r\n                let tempListOfMessages = []\r\n                messagesData.forEach(message => {\r\n                    tempListOfMessages.push(message)\r\n                    console.log(message)\r\n                })\r\n                setListOfMessages(tempListOfMessages)\r\n            } else {\r\n                console.log(\"NO MESSAGES\")\r\n            }\r\n            setLoading(false)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        }) \r\n    }\r\n\r\n    useEffect( ()=>{\r\n        retrieveMessages()\r\n        console.log(\"I RAN\")\r\n    },[recipientName,value])\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCounter2(counter2 + 1)\r\n            retrieveMessages()\r\n        }, 5000);\r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n      }, [counter2, recipientID]);\r\n\r\n    const scrollToBottom = () => {\r\n        endOfMessages2.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        scrollToBottom()\r\n    },[listOfMessages])\r\n\r\n    return (\r\n        <div className=\"h-full flex flex-col justify-between max-h-screen\">\r\n            <div className=\"border-solid border-purple-300 border-2 bg-white p-3 flex justify-between\">\r\n                <span className=\"font-bold text-3xl\">{recipientName} #{recipientID}</span>\r\n            </div>\r\n\r\n            <div className=\" p-4 h-screen max-h-90 overflow-y-scroll\">\r\n                {loading ? \r\n                <div className=\"text-center my-10\"> Fetching Messages </div>\r\n                : \r\n                listOfMessages.map((message) => \r\n                <div className={message.sender.uid===userHeaders.uid ? \"ml-auto mr-0 w-2/6\" : \"ml-0 mr-auto w-2/6\"}>\r\n                    <div className={message.sender.uid===userHeaders.uid ? \"m-3 font-semibold text-right\" : \"m-3 font-semibold\"}>{message.sender.uid}</div>\r\n                    <div className={message.sender.uid===userHeaders.uid ? \"border-solid rounded-md border-purple-300 border-2 text-lg p-4 m-3 bg-purple-700 text-white\" : \"bg-purple-800 border-solid rounded-md border-purple-300 border-2 text-lg p-4 m-3 text-white\"}>\r\n                            <span>{message.body}</span>\r\n                    </div>\r\n                </div>\r\n                )\r\n                }\r\n                <div className=\"h-px w-px\" ref={endOfMessages2}> </div>\r\n            </div>\r\n                \r\n\r\n            <div className=\"p-4\">\r\n                <textarea className=\"border-solid border-purple-300 border-2 resize-none w-full h-40 p-4\" name=\"message\" onChange={handleChange} onKeyPress={handleSentMessageEnterKey} value={message}></textarea>\r\n                <button class=\"bg-purple-700 hover:bg-purple-900 text-white font-bold py-2 px-4 rounded\" onClick={handleSentMessage}>\r\n                    Send Message\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DirectMessage\r\n","import { useHistory } from \"react-router\"\r\n\r\nfunction Welcome(props) {\r\n    const {userId,setCurrentUser,mobileView,setActivePage,setShowMenu} = props\r\n\r\n    let history = useHistory()\r\n    \r\n    function onLogout(){\r\n        history.push(\"/\")\r\n        setCurrentUser({})\r\n    }\r\n\r\n    function showAddChannel(){\r\n        setActivePage(\"AddChannel\")\r\n        setShowMenu(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"flex flex-col w-full px-2\">\r\n           <span className=\"text-3xl font-bold text-center mt-20\">Welcome to your Dashboard!</span>\r\n        \r\n           <span className=\"text-xl text-center font-semibold\">Your Account ID is #{userId}</span>\r\n\r\n           <span className=\"text-center italic m-20\">\"Avion Chat helps you connect with your community anytime, anywhere!\"</span>\r\n\r\n           <button onClick={showAddChannel} className={`bg-purple-700 hover:bg-purple-900 text-white font-bold py-2 px-4 m-10 rounded ${mobileView ? \"w-2/4\" : \"w-1/4\"} mx-auto`}>\r\n                Create A Channel\r\n            </button>\r\n\r\n           <button onClick={onLogout} className={`bg-purple-700 hover:bg-purple-900 text-white font-bold py-2 px-4 rounded ${mobileView ? \"w-2/4\" : \"w-1/4\"} mx-auto`}>\r\n                Switch Account\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome\r\n","import React from 'react'\r\n\r\nfunction AlertWindow(props) {\r\n    const {mobileView,alertMessage,alertWindowVisible,setAlertWindowVisible} = props\r\n\r\n    function hideAlert(){\r\n        setAlertWindowVisible(false)\r\n    }\r\n\r\n    return (\r\n        <div className={`w-full h-full bg-gray-300 bg-opacity-50 pt-24 ${alertWindowVisible ? \"absolute\" : \"hidden\"}`}>\r\n            <div className={`${mobileView ? \"w-1/2\": \"w-1/4\"} rounded-md overflow-hidden m-auto`}>   \r\n                <div className=\"flex bg-purple-800 text-white py-1 px-4 font-bold\">\r\n                    <span className=\"mr-0 ml-auto cursor-pointer\" onClick={hideAlert}>X</span>\r\n                </div>\r\n                <div className=\"bg-white p-4 text-center \">\r\n                    {alertMessage}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertWindow\r\n","import AddChannel from \"../AddChannel\"\r\nimport AddMember from \"../AddMember\"\r\nimport Channel from \"../Channel\"\r\nimport DirectMessage from \"../DirectMessage\"\r\nimport Welcome from \"../Welcome\"\r\nimport AlertWindow from \"../AlertWindow\"\r\nimport {useState} from \"react\"\r\n\r\nfunction Maincontent(props) {\r\n\r\n    const {activePage, userHeaders, userId, setValue,value,channelName,channelID,recipientName,recipientID,listOfMessages,setListOfMessages,setActivePage, counter, setCounter, mobileView,setCurrentUser,setShowMenu,  counter2, setCounter2} = props\r\n    const [alertWindowVisible,setAlertWindowVisible] = useState(false)\r\n    const [alertMessage,setAlertMessage] = useState(\"No Alert Message\")\r\n\r\n    return (\r\n        <div className={`${mobileView ? \"w-full relative\": \"w-10/12 relative\"} bg-gray-200`}>\r\n            <AlertWindow mobileView={mobileView} alertMessage={alertMessage} alertWindowVisible={alertWindowVisible} setAlertWindowVisible={setAlertWindowVisible}/>\r\n            {activePage===\"AddChannel\" && <AddChannel userHeaders={userHeaders} userId={userId} setValue={setValue} value={value} setAlertMessage={setAlertMessage} setAlertWindowVisible={setAlertWindowVisible}/>}\r\n            {activePage===\"Channel\" && <Channel channelName={channelName} channelID={channelID} listOfMessages={listOfMessages} setListOfMessages={setListOfMessages} userHeaders={userHeaders} setActivePage={setActivePage} counter={counter} setCounter={setCounter} mobileView={mobileView}/>}\r\n            {activePage===\"AddMember\" && <AddMember channelID={channelID} userHeaders={userHeaders} setAlertMessage={setAlertMessage} setAlertWindowVisible={setAlertWindowVisible}/>}\r\n            {activePage===\"DirectMessage\" && <DirectMessage recipientName={recipientName} recipientID={recipientID} listOfMessages={listOfMessages} setListOfMessages={setListOfMessages} userHeaders={userHeaders} counter={counter2} setCounter2={setCounter2}/>}\r\n            {activePage===\"Welcome\" && <Welcome userId={userId} setCurrentUser={setCurrentUser} mobileView={mobileView} setShowMenu={setShowMenu} setActivePage={setActivePage} counter2={counter2} setCounter2={setCounter2} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Maincontent\r\n","import Header from \"./dashboard-components/Header\"\r\nimport Sidebar from \"./dashboard-components/Sidebar\"\r\nimport {Redirect } from \"react-router\"\r\nimport Maincontent from \"./dashboard-components/Maincontent\"\r\nimport {useState} from \"react\"\r\nimport Media from \"react-media\"\r\n\r\nfunction Dashboard (props) {\r\n    const {currentUser, setCurrentUser} = props\r\n    const [activePage, setActivePage] = useState(\"Welcome\")\r\n    const userInfo = JSON.parse(localStorage.getItem('currentUser'))\r\n    const userHeaders = userInfo.headers\r\n    const userId = userInfo.data.id\r\n    const [value,setValue] = useState(0)\r\n    const [channelName,setChannelName] = useState(\"\")\r\n    const [channelID,setChannelID] = useState()\r\n    const [recipientName, setRecipientName] = useState(\"\") //copy of channelName state for DM\r\n    const [recipientID, setRecipientID] = useState() //copy of channelID state for DM\r\n    const [listOfMessages,setListOfMessages] = useState([])\r\n    const [counter, setCounter] = useState(0)\r\n    const [counter2, setCounter2] = useState(0)\r\n    const [showMenu,setShowMenu] = useState(false)\r\n    let greetings = `Hello, ${userInfo.data.email}!`\r\n\r\n    if(Object.keys(currentUser).length === 0) {\r\n        return <Redirect to=\"/\"/>\r\n    } else {\r\n        return (\r\n            <>\r\n\r\n            \r\n\r\n            <Media query=\"(max-width: 1332px)\">\r\n                {matches => (matches && \r\n                    <>\r\n                        <div className=\"flex flex-col h-screen\">\r\n                            <Header mobileView={true} showMenu={showMenu} setShowMenu={setShowMenu} greetings={greetings}/>\r\n                            <div className=\"flex flex-grow\">\r\n                                <Maincontent activePage={activePage} userHeaders={userHeaders} userId={userId} setValue={setValue} value={value} channelName={channelName} recipientName={recipientName} channelID={channelID} recipientID={recipientID} listOfMessages={listOfMessages} setListOfMessages={setListOfMessages} setActivePage={setActivePage} counter = {counter} setCounter = {setCounter} mobileView={true} setChannelName={setChannelName} setRecipientName={setRecipientName} setChannelID={setChannelID} setRecipientID={setRecipientID} showMenu={showMenu} setShowMenu={setShowMenu} setCurrentUser={setCurrentUser} setShowMenu={setShowMenu} counter2={counter2} setCounter2={setCounter2}/>\r\n                                <Sidebar userHeaders={userHeaders} setActivePage={setActivePage} value={value} setChannelName={setChannelName} setRecipientName={setRecipientName} setChannelID={setChannelID} setRecipientID={setRecipientID} setListOfMessages={setListOfMessages} counter = {counter} setCounter = {setCounter} showMenu={showMenu} mobileView={true} setShowMenu={setShowMenu} counter2= {counter2} setCounter2={setCounter2} greetings={greetings}/>\r\n                            </div>\r\n                        </div> \r\n                    </>\r\n\r\n                )}\r\n            </Media>\r\n\r\n            <Media query=\"(min-width: 1333px)\">\r\n                {matches => (matches && \r\n                \r\n                    <div className=\"flex flex-col h-screen\">\r\n                        <Header mobileView={false} showMenu={showMenu} setShowMenu={setShowMenu} greetings={greetings}/>\r\n                        <div className=\"flex flex-grow\">\r\n                            <Sidebar userHeaders={userHeaders} setActivePage={setActivePage} value={value} setChannelName={setChannelName} setRecipientName={setRecipientName} setChannelID={setChannelID} setRecipientID={setRecipientID} setListOfMessages={setListOfMessages} counter = {counter} setCounter = {setCounter} mobileView = {false} showMenu={showMenu} setShowMenu={setShowMenu} counter2={counter2} setCounter2={setCounter2} greetings={greetings}/>\r\n                            <Maincontent activePage={activePage} userHeaders={userHeaders} userId={userId} setValue={setValue} value={value} channelName={channelName} recipientName={recipientName} channelID={channelID} recipientID={recipientID} listOfMessages={listOfMessages} setListOfMessages={setListOfMessages} setActivePage={setActivePage} counter = {counter} setCounter = {setCounter} mobileView={false} setCurrentUser={setCurrentUser} setShowMenu={setShowMenu} counter2={counter2} setCounter2={setCounter2}/>\r\n                        </div>\r\n                    </div> \r\n                \r\n                )}\r\n            </Media>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default Dashboard","import {useHistory } from 'react-router';\r\n\r\n\r\nfunction Login(props){\r\n  const {setCurrentUser, emailLogInInput, passwordLogInput, logInReminder, setLogInReminder, logInVisiblity, setLogInVisibility, signUpVisibity, setSignUpVisibility } = props\r\n  let history = useHistory()\r\n\r\n\r\n  async function logInUser(event){\r\n    event.preventDefault()\r\n    //gets information for api call from values of inputs (email, password)\r\n    let body = {\r\n      \"email\": emailLogInInput.current.value,\r\n      \"password\": passwordLogInput.current.value\r\n    }\r\n    let url = \"http://206.189.91.54/api/v1/auth/sign_in/\"\r\n    let headersList =  [\"access-token\", \"client\", \"expiry\", \"uid\"]\r\n\r\n    //fetches api using information from body and stores response in \"userData\"\r\n    const user = await fetch(url,\r\n    {method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n      }, \r\n    mode:\"cors\",\r\n      body: JSON.stringify(body)})\r\n    let userData = await user.json()\r\n\r\n    // runs only if sign up was successful (determined using response status)\r\n    if(user.status >= 200 && user.status<=299 ){\r\n      let headers = await user.headers\r\n      let head = Array.from(headers.entries()).reduce((headers,pair) => {\r\n        if(headersList.includes(pair[0])){\r\n          return {\r\n            ...headers,\r\n            [pair[0]]: pair[1]\r\n          }\r\n        } else {\r\n          return headers\r\n        }\r\n      },{})\r\n\r\n      //updates currentUser data and stores both the user data and login response headers\r\n      setCurrentUser({\r\n        ...userData, \r\n        \"headers\" : head\r\n      })\r\n      //redirects the page to dashboard\r\n      history.push(\"/dashboard\")\r\n    } else {\r\n      //if api call is unsuccessful, the error is displayed\r\n      setLogInReminder(userData.errors[0])\r\n    }\r\n  }\r\n\r\n  function logInvisible(){\r\n    setSignUpVisibility(\"visible\")\r\n    setLogInVisibility(\"invisible\")\r\n  }\r\n\r\n\r\n  return (\r\n  <div className={`lg:min-h-full absolute lg:items-center lg:justify-center py-12 px-4 sm:px-6 lg:px-8 lg:left-0 lg:w-1/2 lg:top-0 lg:left-0 lg:translate-x-0 lg:translate-y-0 lg:visible ${logInVisiblity} w-96 h-min border border-transparent m`}>\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <img\r\n            className=\"mx-auto h-12 w-auto\"\r\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n            alt=\"Workflow\"\r\n          />\r\n\r\n\r\n\r\n          \r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Log in to your account</h2>\r\n        </div>\r\n        <div><h2>{logInReminder}</h2></div>\r\n        <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\r\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                ref={emailLogInInput}\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email address\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Password\r\n              </label>\r\n              <input\r\n                ref={passwordLogInput}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                name=\"remember-me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n\r\n            {/* <div className=\"text-sm\">\r\n              <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                Forgot your password?\r\n              </a>\r\n            </div> */}\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n            onClick={logInUser}\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Log in\r\n            </button>\r\n\r\n            <button\r\n            onClick={logInvisible}\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-indigo-600 text-sm font-medium rounded-md text-indigo bg-white my-2 lg:invisible\"\r\n            >\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Login","\r\n\r\nfunction Signup(props){\r\n  const {emailSignUpInput, passwordSignUpInput, confirmSignUpInput, signUpReminder, setSignUpReminder, setHomeState, emailLogInInput, passwordLogInput, setLogInReminder, logInVisiblity, setLogInVisibility, signUpVisibility, setSignUpVisibility } = props\r\n\r\n\r\n  //RegisterUser function for when the sign up button is clicked\r\n  async function registerUser(event){\r\n    event.preventDefault()\r\n    //gets information for api call from values of inputs (email, password, confirmpassword)\r\n    let body = {\r\n      \"email\": emailSignUpInput.current.value,\r\n      \"password\": passwordSignUpInput.current.value,\r\n      \"password_confirmation\": confirmSignUpInput.current.value\r\n    }\r\n    let url = \"http://206.189.91.54/api/v1/auth/\"\r\n\r\n    //fetches api using information from body and stores response in \"userData\"\r\n    const user = await fetch(url,\r\n      {method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }, \r\n      body: JSON.stringify(body)})\r\n    let userData = await user.json()\r\n    \r\n    // runs only if sign up was successful (determined using response status)\r\n    if(user.status >= 200 && user.status<=299 ){\r\n      emailLogInInput.current.value = emailSignUpInput.current.value\r\n      passwordLogInput.current.value = passwordSignUpInput.current.value\r\n      emailSignUpInput.current.value = \"\"\r\n      passwordSignUpInput.current.value = \"\"\r\n      confirmSignUpInput.current.value = \"\"\r\n      let loginState =  {\r\n        state: \"login\",\r\n        buttonText: \"Sign Up\",\r\n        captionText: \"Don't have an Account?\",\r\n        transitionClass: \"translate-x-0 \"\r\n      }\r\n      //switches pane to login if signup was successful and adds reminder\r\n      setHomeState(loginState)\r\n      setLogInReminder(\"Sign up was successful. You may now log in.\")\r\n    } else {\r\n      //if api call is unsuccessful, the error is displayed\r\n      setSignUpReminder(userData.errors.full_messages[0])\r\n    }\r\n  }\r\n  function onSignupEnter(e){\r\n    if(e.key===\"Enter\"){\r\n      e.preventDefault()\r\n      registerUser(e)\r\n      // emailLogInInput.current.focus()\r\n      emailSignUpInput.current.blur()\r\n      passwordSignUpInput.current.blur()\r\n      confirmSignUpInput.current.blur()\r\n      setTimeout(() => {\r\n        emailLogInInput.current.focus()\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  function signUpVisible() {\r\n    setSignUpVisibility(\"invisible\")\r\n    setLogInVisibility(\"visible\")\r\n  }\r\n\r\n  return (\r\n    <div className={`lg:min-h-full absolute lg:items-center lg:justify-center py-12 px-4 sm:px-6 lg:px-8 lg:right-0 lg:w-1/2 lg:top-0 lg:translate-x-0 lg:translate-y-0 lg:visible  ${signUpVisibility} w-96 h-min border border-transparent`}>\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <img\r\n            className=\"mx-auto h-12 w-auto\"\r\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n            alt=\"Workflow\"\r\n          />\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n        </div>\r\n        <div><h2>{signUpReminder}</h2></div>\r\n        <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\r\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                onKeyPress={e=>onSignupEnter(e)}\r\n                ref={emailSignUpInput}\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email address\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Password\r\n              </label>\r\n              <input\r\n                onKeyPress={e=>onSignupEnter(e)}\r\n                ref={emailSignUpInput}\r\n                ref={passwordSignUpInput}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                onKeyPress={e=>onSignupEnter(e)}\r\n                ref={emailSignUpInput}\r\n                ref={confirmSignUpInput}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Confirm Password\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div>\r\n            <button\r\n            onClick={registerUser}\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Sign up\r\n            </button>\r\n            <button\r\n            onClick={signUpVisible}\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-indigo-600 text-sm font-medium rounded-md text-indigo bg-white my-2 lg:invisible\"\r\n            >\r\n              Log In\r\n            </button>\r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Signup","import { useState, useRef } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\n\r\n\r\n\r\nfunction Home(props){\r\n  const {currentUser, setCurrentUser} = props\r\n  const [logInReminder, setLogInReminder] = useState(\"\")\r\n  const [signUpReminder, setSignUpReminder] = useState(\"\")\r\n  const emailLogInInput = useRef(\"\")\r\n  const passwordLogInput = useRef(\"\")\r\n  const emailSignUpInput = useRef(\"\")\r\n  const passwordSignUpInput = useRef(\"\")\r\n  const confirmSignUpInput = useRef(\"\")\r\n  const [logInVisiblity, setLogInVisibility] = useState(\"visible\")\r\n  const [signUpVisibility, setSignUpVisibility] = useState(\"invisible\")\r\n\r\n\r\n  //Set up for information to be displayed in the moving panel\r\n  let signupState = {\r\n    state: \"signup\",\r\n    buttonText: \"Log In\",\r\n    captionText: \"Already have an Account?\",\r\n    transitionClass: \"-translate-x-96 \"\r\n  }\r\n  let loginState =  {\r\n    state: \"login\",\r\n    buttonText: \"Sign Up\",\r\n    captionText: \"Don't have an Account?\",\r\n    transitionClass: \"translate-x-0 \"\r\n  }\r\n  const [homeState, setHomeState] = useState(loginState)\r\n\r\n\r\n  //Transition function for when the user wants to shift from logging in to signing up, and vice-versa\r\n  function onTransition() {\r\n    emailLogInInput.current.value = \"\"\r\n    passwordLogInput.current.value = \"\"\r\n    emailSignUpInput.current.value = \"\"\r\n    passwordSignUpInput.current.value = \"\"\r\n    confirmSignUpInput.current.value = \"\"\r\n    setLogInReminder(\"\")\r\n    setSignUpReminder(\"\")\r\n\r\n    if(homeState.state===\"login\"){\r\n      setHomeState(signupState)\r\n    } else {\r\n      setHomeState(loginState)\r\n    }\r\n  }\r\n\r\n  if(Object.keys(currentUser).length === 0){\r\n    return (\r\n    <div className = \"lg:border-8 absolute sm:w-full sm:full lg:h-100 lg:w-100 lg:top-1/2 lg:left-1/2 transform lg:-translate-x-1/2 lg:-translate-y-1/2 w-full h-full flex justify-center items-center\">\r\n      <div className= {`h-44 w-50 border-8 absolute right-0 z-10 bg-gray-400 text-center h-full transform transition-all delay-200 ease-in-out duration-700 ${homeState.transitionClass} lg:visible invisible`} >\r\n        <h2 className=\"mt-6 text-center text-2xl font-extrabold text-gray-900\">{homeState.captionText}</h2>\r\n\r\n        <button\r\n          onClick={onTransition}\r\n            type=\"submit\"\r\n            className=\"group relative w-1/2 flex justify-center m-auto my-4 py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 \"\r\n        >\r\n          {homeState.buttonText}\r\n        </button>\r\n      </div>\r\n\r\n        <Login\r\n          currentUser={currentUser}\r\n          setCurrentUser={setCurrentUser}\r\n          emailLogInInput={emailLogInInput}\r\n          passwordLogInput={passwordLogInput}\r\n          logInReminder={logInReminder}\r\n          setLogInReminder={setLogInReminder}\r\n          logInVisiblity = {logInVisiblity}\r\n          setLogInVisibility = {setLogInVisibility}\r\n          signUpVisibility = {signUpVisibility}\r\n          setSignUpVisibility = {setSignUpVisibility}\r\n        />\r\n        <Signup\r\n          currentUser={currentUser}\r\n          setCurrentUser={setCurrentUser}\r\n          emailSignUpInput={emailSignUpInput}\r\n          passwordSignUpInput={passwordSignUpInput}\r\n          confirmSignUpInput={confirmSignUpInput}\r\n          signUpReminder={signUpReminder}\r\n          setSignUpReminder={setSignUpReminder}\r\n          setHomeState={setHomeState}\r\n          emailLogInInput={emailLogInInput}\r\n          passwordLogInput={passwordLogInput}\r\n          setLogInReminder={setLogInReminder}\r\n          logInVisiblity = {logInVisiblity}\r\n          setLogInVisibility = {setLogInVisibility}\r\n          signUpVisibility = {signUpVisibility}\r\n          setSignUpVisibility = {setSignUpVisibility}\r\n        />\r\n    </div>\r\n    )\r\n  } else {\r\n    return <Redirect to=\"/dashboard\"/>\r\n  }\r\n}\r\nexport default Home","import './css/App.css';\r\nimport Dashboard from './js/Dashboard';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Home from './js/Home'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  \r\n\r\n  //gets \"currentUser\" data stored in local storage if there is any and saves it to currentUser state\r\n  const localStorageCurrentUser = localStorage.getItem(\"currentUser\")\r\n  let currentUserData = {}\r\n  if(localStorageCurrentUser) {\r\n    currentUserData = JSON.parse(localStorageCurrentUser)\r\n  }\r\n  const [currentUser, setCurrentUser] = useState(currentUserData)\r\n\r\n  //saves changes to localstorage.currentUser whenever there are change to currentUser state\r\n  useEffect(()=>{\r\n    localStorage.setItem(\"currentUser\",JSON.stringify(currentUser))\r\n  },[currentUser])\r\n\r\n\r\n  return (\r\n    <Router>\r\n    <div>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" component={() => <Home \r\n        currentUser={currentUser}\r\n        setCurrentUser={setCurrentUser}\r\n        />}>\r\n        </Route>\r\n        <Route path=\"/dashboard\" component={() => <Dashboard \r\n        currentUser={currentUser}\r\n        setCurrentUser={setCurrentUser}\r\n        />}>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}